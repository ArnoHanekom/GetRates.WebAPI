// <auto-generated />
using System;
using GetRates.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GetRates.DAL.Migrations
{
    [DbContext(typeof(CryptoContext))]
    [Migration("20210519084758_DecimalColumnSizeChangeMissed")]
    partial class DecimalColumnSizeChangeMissed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GetRates.DAL.Models.Crypto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiRefId")
                        .HasColumnType("int");

                    b.Property<int>("CMC_Rank")
                        .HasColumnType("int");

                    b.Property<decimal?>("Circulating_Supply")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime>("Date_Added")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Last_Updated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Max_Supply")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Market_Pairs")
                        .HasColumnType("int");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total_Supply")
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("Cryptos");
                });

            modelBuilder.Entity("GetRates.DAL.Models.CryptoQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CryptoCMC_Ref_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Updated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Market_Cap")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_1h")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_24h")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_30d")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_60d")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_7d")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("Percent_Change_90d")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("QuoteCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Volume_24h")
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("Id");

                    b.HasIndex("CryptoCMC_Ref_id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("GetRates.DAL.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Json_Ref_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token_address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("GetRates.DAL.Models.Crypto", b =>
                {
                    b.HasOne("GetRates.DAL.Models.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");
                });

            modelBuilder.Entity("GetRates.DAL.Models.CryptoQuote", b =>
                {
                    b.HasOne("GetRates.DAL.Models.Crypto", "Crypto")
                        .WithMany("Quote")
                        .HasForeignKey("CryptoCMC_Ref_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
